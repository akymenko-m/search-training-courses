{"version":3,"file":"static/js/192.4b404f9a.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/tag/dist/chunk-IXKZFKRY.mjs","../node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/stream.js","../node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/@videojs/vhs-utils/es/codecs.js","../node_modules/@videojs/vhs-utils/es/media-types.js","../node_modules/@videojs/vhs-utils/es/byte-helpers.js","../node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/@videojs/vhs-utils/es/mp4-helpers.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/media-groups.js","../node_modules/@videojs/vhs-utils/es/id3-helpers.js","../node_modules/@videojs/vhs-utils/es/opus-helpers.js","../node_modules/@videojs/vhs-utils/es/ebml-helpers.js","../node_modules/@videojs/vhs-utils/es/nal-helpers.js","../node_modules/@videojs/vhs-utils/es/containers.js","../node_modules/video.js/dist/video.es.js","helpers/storage.js","components/VideoPlayer/VideoPlayer.styled.js","components/VideoPlayer/VideoPlayer.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/LessonItem/LessonItem.styled.js","components/LessonItem/LessonItem.jsx","pages/AboutCoursePage/AboutCoursePage.styled.js","pages/AboutCoursePage/AboutCoursePage.jsx","redux/selectors.js","../node_modules/@videojs/xhr/lib/http-handler.js","../node_modules/@videojs/xhr/lib/index.js","../node_modules/@xmldom/xmldom/lib/conventions.js","../node_modules/@xmldom/xmldom/lib/dom-parser.js","../node_modules/@xmldom/xmldom/lib/dom.js","../node_modules/@xmldom/xmldom/lib/entities.js","../node_modules/@xmldom/xmldom/lib/index.js","../node_modules/@xmldom/xmldom/lib/sax.js","../node_modules/global/document.js","../node_modules/global/window.js","../node_modules/is-function/index.js","../node_modules/keycode/index.js","../node_modules/mux.js/lib/tools/parse-sidx.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/utils/numbers.js","../node_modules/safe-json-parse/tuple.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/@babel/runtime/helpers/extends.js"],"sourcesContent":["// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/tag.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nvar Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */ jsx(TagStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(chakra.span, { ref, ...ownProps, __css: containerStyles }) });\n});\nTag.displayName = \"Tag\";\nvar TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */ jsx(chakra.span, { ref, noOfLines: 1, ...props, __css: styles.label });\n});\nTagLabel.displayName = \"TagLabel\";\nvar TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginEnd: \"0.5rem\", ...props }));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nvar TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginStart: \"0.5rem\", ...props }));\nTagRightIcon.displayName = \"TagRightIcon\";\nvar TagCloseIcon = (props) => /* @__PURE__ */ jsx(Icon, { verticalAlign: \"inherit\", viewBox: \"0 0 512 512\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }\n) });\nTagCloseIcon.displayName = \"TagCloseIcon\";\nvar TagCloseButton = forwardRef(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props;\n    const styles = useTagStyles();\n    const btnStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.button,\n      {\n        ref,\n        \"aria-label\": \"close\",\n        ...rest,\n        type: \"button\",\n        disabled: isDisabled,\n        __css: btnStyles,\n        children: children || /* @__PURE__ */ jsx(TagCloseIcon, {})\n      }\n    );\n  }\n);\nTagCloseButton.displayName = \"TagCloseButton\";\n\nexport {\n  useTagStyles,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  TagRightIcon,\n  TagCloseButton\n};\n","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 6.0.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","/*! @name mpd-parser @version 1.0.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.0.1\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  const mergedPlaylists = values(playlists.reduce((acc, playlist) => {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n    if (!acc[name]) {\n      // First Period\n      acc[name] = playlist;\n      acc[name].attributes.timelineStarts = [];\n    } else {\n      // Subsequent Periods\n      if (playlist.segments) {\n        // first segment of subsequent periods signal a discontinuity\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        acc[name].segments.push(...playlist.segments);\n      } // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    }\n\n    acc[name].attributes.timelineStarts.push({\n      // Although they represent the same number, it's important to have both to make it\n      // compatible with HLS potentially having a similar attribute.\n      start: playlist.attributes.periodStart,\n      timeline: playlist.attributes.periodStart\n    });\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  return {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  sidxMapping = {},\n  previousManifest\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nconst buildBaseUrls = (referenceUrls, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, {\n        baseUrl\n      })\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throwsw on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * @license\n * Video.js 8.0.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.0.4\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nconst LogByTypeFactory = (name, log) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(name + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log);\n\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n  log.createLogger = subname => createLogger$1(name + ': ' + subname);\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Depreacted, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Depreacted, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the broser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {EventTarget} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overriden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {Component~ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing() {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks() {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks() {}\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType() {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType() {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    const el = createEl('picture', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    }, {}, createEl('img', {\n      loading: 'lazy',\n      crossOrigin: this.crossOrigin()\n    }, {\n      alt: ''\n    }));\n    return el;\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.el_) {\n        // If the poster's element exists, give its value\n        return this.el_.querySelector('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.el_.querySelector('img').crossOrigin = value;\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  setSrc(url) {\n    this.el_.querySelector('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayHandler = e => this.updateDisplay(e);\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', e => this.preselectTrack(e));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended'], e => this.updateContent(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp() {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      const isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => this.open(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [`<${type} id=\"${id}\" class=\"${type === 'label' ? 'vjs-label' : ''}\">`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, Object.values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set contols on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    this.error(error);\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      durationDisplay,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {EventTarget~Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {EventTarget~Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n/*! @name videojs-contrib-quality-levels @version 3.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} remove QualityLevel to remove to the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"3.0.0\";\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @function initPlugin\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @function qualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.mergeOptions({}, options));\n}; // Register the plugin with video.js.\n\nregisterPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.0.0 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  const seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n */\n\nconst addPropertiesToMain = (main, uri) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    const groupId = `placeholder-uri-${mediaType}-${groupKey}-${labelKey}`; // add a playlist array under properties\n\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls; // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      const newOptions = beforeRequest(options);\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    const request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl);\n  return manifest;\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$2 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$2,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      char = get708CharFromCode(extended | currentByte);\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push('');\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = '';\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    },\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (frameParsers[frame.id]) {\n          // use frame specific parser\n          frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$1 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n  var window$1 = window_1;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = captions => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: message => {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(merge(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  for (let i = 0; i < cues.length; i++) {\n    const duplicates = [];\n    let occurrences = 0;\n    for (let j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n    if (duplicates.length) {\n      duplicates.forEach(dupe => track.removeCue(dupe));\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset,\n      videoDuration: this.duration_()\n    });\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);\n    sourceBuffer.changeType(mime);\n    sourceUpdater.codecs[type] = codec;\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n      let loadHandler;\n      const errorHandler = () => {\n        this.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n        this.stopForError({\n          message: 'Error loading vtt.js'\n        });\n        return;\n      };\n      loadHandler = () => {\n        this.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n        this.segmentRequestFinished_(error, simpleSegment, result);\n      };\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const timestampmap = segmentInfo.timestampmap;\n    const diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings;\n    stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    stopLoaders(segmentLoader, mediaType);\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 60 * 2;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, this.requestOptions_) : new PlaylistLoader(src, this.vhs_, this.requestOptions_);\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks\n    }), options);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist.id || playlist.uri;\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      this.mainPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      this.mainSegmentLoader_.load();\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(() => {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        this.tech_.setCurrentTime(this.tech_.currentTime() + 0.04);\n      } else {\n        this.tech_.setCurrentTime(this.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n    if (!media.endList) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', () => {\n          this.trigger('firstplay');\n          this.tech_.setCurrentTime(seekable.end(0));\n          this.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    }; // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), this.media());\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: this.media(),\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n      const audioGroup = this.media().attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== this.media()) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: this.media(),\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: this.media(),\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.0.0\";\nvar version$3 = \"6.2.0\";\nvar version$2 = \"1.0.1\";\nvar version$1 = \"6.0.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  setOptions_() {\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 5 * 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n      const mainPlaylist = this.playlistController_.main();\n      if (!mainPlaylist || !mainPlaylist.playlists) {\n        return;\n      }\n      const excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      mainPlaylist.playlists.forEach(playlist => {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n      if (excludedHDPlaylists.length) {\n        videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.', ...excludedHDPlaylists); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n        this.playlistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options = {}) {\n    const {\n      vhs: {\n        overrideNative = !videojs.browser.IS_ANY_SAFARI\n      } = {}\n    } = merge(videojs.options, options);\n    const supportedType = simpleTypeFromSourceType(type);\n    const canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport default Object.assign(\n  {},\n  {\n    save,\n    load,\n  }\n);\n","import styled from 'styled-components';\n\nexport const Caption = styled.p`\n  padding: 5px;\n  font-size: 12px;\n  text-align: center;\n  color: darkblue;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  background-color: rgba(128, 128, 128, 0.6);\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const VideoStyled = styled.video`\n  & picture img {\n    object-fit: cover;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport videojs from 'video.js';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/selectors';\nimport Loader from 'components/Loader/Loader';\nimport storage from 'helpers/storage';\nimport 'video.js/dist/video-js.css';\nimport { Caption, VideoStyled } from './VideoPlayer.styled';\n\nconst arr = storage.load('progressCourses') ?? [];\n\nconst Video = props => {\n  const videoNode = useRef(null);\n  const [player, setPlayer] = useState(null);\n\n  useEffect(() => {\n    try {\n      if (videoNode.current) {\n        const _player = videojs(videoNode.current, props);\n        _player.ready(function () {\n          const matchEl = arr.find(el => el.title === props.data);\n          _player.currentTime(Number(matchEl ? matchEl.time : '0'));\n        });\n\n        setPlayer(_player);\n\n        if (!props.sources.src) {\n          return;\n        }\n\n        return () => {\n          if (player) {\n            player.dispose();\n            videoNode.current = null;\n          }\n        };\n\n        // return () => {\n        //   if (player !== null) {\n        //     player.dispose();\n        //   }};\n      }\n    } catch (error) {\n      console.error(error);\n      throw new Error('An error has occurred');\n    }\n  }, [player, props]);\n\n  const handleClick = () => {\n    const curTime = player?.cache_?.currentTime;\n\n    if (arr.length < 0 || arr.every(el => el.title !== props.data)) {\n      arr.push({ title: props.data, time: curTime });\n    }\n    if (arr.map(el => (el.title === props.data ? (el.time = curTime) : el)));\n\n    storage.save('progressCourses', arr);\n  };\n\n  return (\n    <div data-vjs-player>\n      <Caption>\n        Lesson {props.lessonNumber} - {props.data}\n      </Caption>\n      <VideoStyled\n        ref={videoNode}\n        onClick={handleClick}\n        className=\"video-js\"\n      ></VideoStyled>\n    </div>\n  );\n};\n\nconst VideoPlayer = ({ poster, link, title, lessonNumber }) => {\n  const isLoading = useSelector(selectIsLoading);\n\n  const play = {\n    lessonNumber: lessonNumber,\n    data: title,\n    fill: true,\n    fluid: true,\n    controls: true,\n    preload: 'metadata',\n    poster: poster,\n    sources: [\n      {\n        src: link,\n        type: 'application/x-mpegURL',\n      },\n    ],\n  };\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"App\">\n          <Video {...play} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n\nVideo.propTypes = {\n  controls: PropTypes.bool,\n  data: PropTypes.string,\n  fill: PropTypes.bool,\n  fluid: PropTypes.bool,\n  lessonNumber: PropTypes.number,\n  poster: PropTypes.string,\n  preload: PropTypes.string,\n  sources: PropTypes.arrayOf(PropTypes.object),\n};\n\nVideoPlayer.propTypes = {\n  link: PropTypes.string,\n  title: PropTypes.string,\n  lessonNumber: PropTypes.number,\n  poster: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalStyled = styled.div`\n  background-color: #fff;\n  min-width: 300px;\n  min-height: 450px;\n\n  @media screen and (min-width: 400px) {\n    width: calc(100vw - 48px);\n  }\n\n  @media screen and (min-width: 1000px) {\n    width: 1000px;\n    max-height: 500px;\n  }\n`;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport VideoPlayer from 'components/VideoPlayer/VideoPlayer';\nimport { Overlay, ModalStyled } from './Modal.styled';\n\nexport const Modal = ({ lessonNumber, title, link, poster, onClose }) => {\n  useEffect(() => {\n    const handleKeydown = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <Overlay className=\"Overlay\" onClick={handleBackdropClick}>\n      <ModalStyled className=\"Modal\">\n        <VideoPlayer\n          lessonNumber={lessonNumber}\n          title={title}\n          link={link}\n          poster={poster}\n        />\n      </ModalStyled>\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  lessonNumber: PropTypes.number,\n  title: PropTypes.string,\n  link: PropTypes.string,\n  poster: PropTypes.string,\n  onClose: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  cursor: pointer;\n  @media screen and (min-width: 450px) {\n    width: calc((100% - 80px) / 3);\n    text-align: center;\n  }\n  @media screen and (min-width: 1000px) {\n    width: calc((100% - 100px) / 5);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Tag } from '@chakra-ui/react';\nimport { Modal } from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { Item } from './LessonItem.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const LessonItem = ({ lesson }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    if (lesson.status !== 'unlocked') {\n      const notify = () =>\n        toast.info('The video is locked', {\n          position: 'bottom-center',\n          autoClose: 2000,\n        });\n      notify();\n      return;\n    }\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Item onClick={openModal}>\n        <div>\n          <Tag colorScheme=\"blue\">Lesson {lesson.order}</Tag>\n          <p>{lesson.title}</p>\n        </div>\n        <ToastContainer />\n      </Item>\n\n      {showModal && (\n        <Modal\n          lessonNumber={lesson.order}\n          link={lesson.link}\n          poster={lesson.previewImageLink + '/lesson-' + lesson.order + '.webp'}\n          title={lesson.title}\n          onClose={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nLessonItem.propTypes = {\n  lesson: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport bcImage from '../../images/elearning-bg.jpg';\nimport bcImageMob from '../../images/elearning-bg-mob.png';\n\nexport const AboutCourseContainer = styled.div`\n  padding: 0 20px 20px;\n  @media screen and (min-width: 768px) {\n    padding: 0 40px 40px;\n  }\n  @media screen and (min-width: 1000px) {\n    padding: 0 80px 80px;\n  }\n`;\nexport const General = styled.div`\n  margin-top: 20px;\n`;\n\nexport const VideoContainer = styled.div`\n  margin: 20px auto;\n  max-width: 600px;\n  @media screen and (min-width: 768px) {\n    max-width: 1000px;\n  }\n`;\n\nexport const CourseNameContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  padding: 80px 16px;\n  margin-bottom: 20px;\n  background-image: url(${bcImageMob});\n  background-color: white;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  @media screen and (min-width: 768px) {\n    background-image: url(${bcImage});\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0 auto;\n  max-width: 330px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 30px;\n  @media screen and (min-width: 768px) {\n    width: 60%;\n    max-width: 400px;\n    padding-right: 50px;\n    position: absolute;\n    right: 0;\n    font-size: 36px;\n  }\n  @media screen and (min-width: 1000px) {\n    width: 60%;\n    max-width: 500px;\n    padding-right: 150px;\n    font-size: 40px;\n  }\n`;\n\nexport const LessonsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 10px;\n  list-style-type: none;\n  @media screen and (min-width: 450px) {\n    flex-direction: row;\n    justify-content: center;\n    gap: 20px;\n  }\n`;\n","import { Button } from '@chakra-ui/react';\nimport { LessonItem } from 'components/LessonItem/LessonItem';\nimport Loader from 'components/Loader/Loader';\nimport VideoPlayer from 'components/VideoPlayer/VideoPlayer';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { getToken, requestDataCourse } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport {\n  AboutCourseContainer,\n  CourseNameContainer,\n  General,\n  LessonsList,\n  Title,\n  VideoContainer,\n} from './AboutCoursePage.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst AboutCoursePage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const { courseId } = useParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const [courseDetails, setCourseDetails] = useState(null);\n  const [lessonDetails, setLessonDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchCourseDetails = async courseId => {\n      try {\n        await dispatch(getToken());\n\n        const courseDetails = await requestDataCourse(courseId);\n        setCourseDetails(courseDetails);\n\n        const firstLesson = courseDetails?.lessons?.find(el => el.order === 1);\n        setLessonDetails(firstLesson);\n      } catch (error) {\n        console.log(error);\n        const notify = () =>\n          toast.error(error, {\n            theme: 'dark',\n          });\n        notify();\n      }\n    };\n    fetchCourseDetails(courseId);\n  }, [courseId, dispatch]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        courseDetails && (\n          <div>\n            <CourseNameContainer>\n              <Title>{courseDetails.title}</Title>\n            </CourseNameContainer>\n\n            <AboutCourseContainer>\n              <Button colorScheme=\"blue\" variant=\"outline\" size=\"sm\">\n                <Link to={location.state?.from ?? '/core/preview-courses'}>\n                  ← Go back\n                </Link>\n              </Button>\n\n              <General>\n                <p>\n                  <b>Rating:</b> {courseDetails.rating}\n                </p>\n                <p>\n                  <b>Description:</b> {courseDetails.description}\n                </p>\n\n                {lessonDetails && (\n                  <VideoContainer>\n                    <VideoPlayer\n                      lessonNumber={lessonDetails.order}\n                      link={lessonDetails.link}\n                      poster={courseDetails.previewImageLink + '/cover.webp'}\n                      title={lessonDetails.title}\n                    />\n                  </VideoContainer>\n                )}\n\n                <LessonsList>\n                  {courseDetails?.lessons\n                    ?.sort((a, b) => a.order - b.order)\n                    .map(lesson => {\n                      return <LessonItem key={lesson.id} lesson={lesson} />;\n                    })}\n                </LessonsList>\n              </General>\n            </AboutCourseContainer>\n            <ToastContainer />\n          </div>\n        )\n      )}\n    </>\n  );\n};\n\nexport default AboutCoursePage;\n","export const getCoursesData = state => state.coursesData.courses;\nexport const selectIsLoading = state => state.coursesData.isLoading;\n","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","var freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({amp:'&', apos:\"'\", gt:'>', lt:'<', quot:'\"'})\n\n/**\n * A map of currently 241 entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"À\",\n       Aacute: \"Á\",\n       Acirc: \"Â\",\n       Atilde: \"Ã\",\n       Auml: \"Ä\",\n       Aring: \"Å\",\n       AElig: \"Æ\",\n       Ccedil: \"Ç\",\n       Egrave: \"È\",\n       Eacute: \"É\",\n       Ecirc: \"Ê\",\n       Euml: \"Ë\",\n       Igrave: \"Ì\",\n       Iacute: \"Í\",\n       Icirc: \"Î\",\n       Iuml: \"Ï\",\n       ETH: \"Ð\",\n       Ntilde: \"Ñ\",\n       Ograve: \"Ò\",\n       Oacute: \"Ó\",\n       Ocirc: \"Ô\",\n       Otilde: \"Õ\",\n       Ouml: \"Ö\",\n       Oslash: \"Ø\",\n       Ugrave: \"Ù\",\n       Uacute: \"Ú\",\n       Ucirc: \"Û\",\n       Uuml: \"Ü\",\n       Yacute: \"Ý\",\n       THORN: \"Þ\",\n       szlig: \"ß\",\n       agrave: \"à\",\n       aacute: \"á\",\n       acirc: \"â\",\n       atilde: \"ã\",\n       auml: \"ä\",\n       aring: \"å\",\n       aelig: \"æ\",\n       ccedil: \"ç\",\n       egrave: \"è\",\n       eacute: \"é\",\n       ecirc: \"ê\",\n       euml: \"ë\",\n       igrave: \"ì\",\n       iacute: \"í\",\n       icirc: \"î\",\n       iuml: \"ï\",\n       eth: \"ð\",\n       ntilde: \"ñ\",\n       ograve: \"ò\",\n       oacute: \"ó\",\n       ocirc: \"ô\",\n       otilde: \"õ\",\n       ouml: \"ö\",\n       oslash: \"ø\",\n       ugrave: \"ù\",\n       uacute: \"ú\",\n       ucirc: \"û\",\n       uuml: \"ü\",\n       yacute: \"ý\",\n       thorn: \"þ\",\n       yuml: \"ÿ\",\n       nbsp: \"\\u00a0\",\n       iexcl: \"¡\",\n       cent: \"¢\",\n       pound: \"£\",\n       curren: \"¤\",\n       yen: \"¥\",\n       brvbar: \"¦\",\n       sect: \"§\",\n       uml: \"¨\",\n       copy: \"©\",\n       ordf: \"ª\",\n       laquo: \"«\",\n       not: \"¬\",\n       shy: \"­­\",\n       reg: \"®\",\n       macr: \"¯\",\n       deg: \"°\",\n       plusmn: \"±\",\n       sup2: \"²\",\n       sup3: \"³\",\n       acute: \"´\",\n       micro: \"µ\",\n       para: \"¶\",\n       middot: \"·\",\n       cedil: \"¸\",\n       sup1: \"¹\",\n       ordm: \"º\",\n       raquo: \"»\",\n       frac14: \"¼\",\n       frac12: \"½\",\n       frac34: \"¾\",\n       iquest: \"¿\",\n       times: \"×\",\n       divide: \"÷\",\n       forall: \"∀\",\n       part: \"∂\",\n       exist: \"∃\",\n       empty: \"∅\",\n       nabla: \"∇\",\n       isin: \"∈\",\n       notin: \"∉\",\n       ni: \"∋\",\n       prod: \"∏\",\n       sum: \"∑\",\n       minus: \"−\",\n       lowast: \"∗\",\n       radic: \"√\",\n       prop: \"∝\",\n       infin: \"∞\",\n       ang: \"∠\",\n       and: \"∧\",\n       or: \"∨\",\n       cap: \"∩\",\n       cup: \"∪\",\n       'int': \"∫\",\n       there4: \"∴\",\n       sim: \"∼\",\n       cong: \"≅\",\n       asymp: \"≈\",\n       ne: \"≠\",\n       equiv: \"≡\",\n       le: \"≤\",\n       ge: \"≥\",\n       sub: \"⊂\",\n       sup: \"⊃\",\n       nsub: \"⊄\",\n       sube: \"⊆\",\n       supe: \"⊇\",\n       oplus: \"⊕\",\n       otimes: \"⊗\",\n       perp: \"⊥\",\n       sdot: \"⋅\",\n       Alpha: \"Α\",\n       Beta: \"Β\",\n       Gamma: \"Γ\",\n       Delta: \"Δ\",\n       Epsilon: \"Ε\",\n       Zeta: \"Ζ\",\n       Eta: \"Η\",\n       Theta: \"Θ\",\n       Iota: \"Ι\",\n       Kappa: \"Κ\",\n       Lambda: \"Λ\",\n       Mu: \"Μ\",\n       Nu: \"Ν\",\n       Xi: \"Ξ\",\n       Omicron: \"Ο\",\n       Pi: \"Π\",\n       Rho: \"Ρ\",\n       Sigma: \"Σ\",\n       Tau: \"Τ\",\n       Upsilon: \"Υ\",\n       Phi: \"Φ\",\n       Chi: \"Χ\",\n       Psi: \"Ψ\",\n       Omega: \"Ω\",\n       alpha: \"α\",\n       beta: \"β\",\n       gamma: \"γ\",\n       delta: \"δ\",\n       epsilon: \"ε\",\n       zeta: \"ζ\",\n       eta: \"η\",\n       theta: \"θ\",\n       iota: \"ι\",\n       kappa: \"κ\",\n       lambda: \"λ\",\n       mu: \"μ\",\n       nu: \"ν\",\n       xi: \"ξ\",\n       omicron: \"ο\",\n       pi: \"π\",\n       rho: \"ρ\",\n       sigmaf: \"ς\",\n       sigma: \"σ\",\n       tau: \"τ\",\n       upsilon: \"υ\",\n       phi: \"φ\",\n       chi: \"χ\",\n       psi: \"ψ\",\n       omega: \"ω\",\n       thetasym: \"ϑ\",\n       upsih: \"ϒ\",\n       piv: \"ϖ\",\n       OElig: \"Œ\",\n       oelig: \"œ\",\n       Scaron: \"Š\",\n       scaron: \"š\",\n       Yuml: \"Ÿ\",\n       fnof: \"ƒ\",\n       circ: \"ˆ\",\n       tilde: \"˜\",\n       ensp: \" \",\n       emsp: \" \",\n       thinsp: \" \",\n       zwnj: \"‌\",\n       zwj: \"‍\",\n       lrm: \"‎\",\n       rlm: \"‏\",\n       ndash: \"–\",\n       mdash: \"—\",\n       lsquo: \"‘\",\n       rsquo: \"’\",\n       sbquo: \"‚\",\n       ldquo: \"“\",\n       rdquo: \"”\",\n       bdquo: \"„\",\n       dagger: \"†\",\n       Dagger: \"‡\",\n       bull: \"•\",\n       hellip: \"…\",\n       permil: \"‰\",\n       prime: \"′\",\n       Prime: \"″\",\n       lsaquo: \"‹\",\n       rsaquo: \"›\",\n       oline: \"‾\",\n       euro: \"€\",\n       trade: \"™\",\n       larr: \"←\",\n       uarr: \"↑\",\n       rarr: \"→\",\n       darr: \"↓\",\n       harr: \"↔\",\n       crarr: \"↵\",\n       lceil: \"⌈\",\n       rceil: \"⌉\",\n       lfloor: \"⌊\",\n       rfloor: \"⌋\",\n       loz: \"◊\",\n       spades: \"♠\",\n       clubs: \"♣\",\n       hearts: \"♥\",\n       diams: \"♦\"\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["createContext","strict","name","useButtonGroup","ButtonIcon","props","children","className","rest","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","spacing","Spinner","color","width","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","assignRef","ref","value","current","error","Error","mergeRefs","refs","node","forEach","useMergeRefs","Button","forwardRef","group","styles","useStyleConfig","omitThemingProps","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","useState","isButton","setIsButton","useCallback","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","errorMessage","TagStylesProvider","useTagStyles","Tag","useMultiStyleConfig","ownProps","containerStyles","maxWidth","container","noOfLines","Icon","TagCloseIcon","viewBox","fill","d","TagCloseButton","btnStyles","closeButton","DEFAULT_LOCATION","baseUrl","relativeUrl","test","window","nativeURL","protocolLess","removeLocation","URLToolkit","newUrl","URL","href","slice","length","protocol","Stream","this","listeners","_proto","prototype","on","listener","push","off","index","indexOf","splice","trigger","callbacks","arguments","i","call","args","Array","_length","_i","apply","dispose","pipe","destination","data","decodeB64ToUint8Array","b64Text","s","decodedString","Buffer","from","toString","array","Uint8Array","charCodeAt","LineStream","buffer","nextNewline","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","parseInt","offset","parseAttributes","attributes","attr","attrs","split","RegExp","replace","ParseStream","customParsers","tagMappers","line","event","trim","reduce","acc","mapper","mappedLine","concat","newLine","tagType","duration","parseFloat","title","version","number","playlistType","_extends","allowed","URI","uri","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","hasOwnProperty","key","subkey","text","expression","customType","dataParser","segment","map","camelCaseKeys","Object","keys","str","a","toUpperCase","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","currentMap","self","uris","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","part","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","options","addParser","addTagMapper","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","Number","parseCodecs","codecString","codecs","codecType","details","mediaType","isAudioCodec","getMimeForCodec","c","every","browserSupportsCodec","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","obj","ArrayBuffer","isView","toUint8","bytes","isArray","byteOffset","byteLength","BigInt","BYTE_TABLE","bytesToNumber","Uint16Array","b","_temp","_ref$signed","signed","_ref$le","le","fn","total","byte","exponent","Math","abs","max","numberToBytes","_temp2","_ref2$le","x","byteCount","ceil","countBits","byteIndex","stringToBytes","string","stringIsBytes","unescape","encodeURIComponent","view","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","DESCRIPTORS","isObject","merge","objects","source","values","o","k","flatten","lists","y","list","errors","urlTypeToSegment","range","indexRange","resolvedUri","resolveUrl","ranges","startRange","endRange","MAX_SAFE_INTEGER","parseEndNumber","endNumber","segmentRange","static","timescale","sourceDuration","periodDuration","segmentDuration","end","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","Infinity","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","min","parseByDuration","startNumber","time","toSegments","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","startIndex","sidxByteRange","sidxEnd","mediaReferences","references","filter","referenceType","firstOffset","reference","size","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","getUniqueTimelineStarts","timelineStarts","keyFunction","el","sort","getMediaGroupPlaylists","master","callback","mediaGroupPlaylists","properties","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","positionManifestOnTimeline","oldManifest","newManifest","oldPlaylists","newPlaylists","findIndex","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","updateSequenceNumbers","generateSidxKey","byteRangeToString","mergeDiscontiguousPlaylists","id","lang","l","e","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","bandwidth","CODECS","AUDIO","SUBTITLES","formatVttPlaylist","m3u8Attributes","formatVideoPlaylist","frameRate","videoOnly","mimeType","contentType","audioOnly","vttOnly","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","previousManifest","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","captionServices","Boolean","VIDEO","organizedAudioGroup","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","organizeAudioPlaylists","organizedVttGroup","organizeVttPlaylists","playlistTimelineStarts","subs","cc","svcObj","svc","service","channel","aspectRatio","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","repeat","segmentTime","t","count","nextS","identifierPattern","constructTemplateUrl","url","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","base","segmentsInfo","toPlaylists","representations","findChildren","element","childNodes","getContent","textContent","parseDuration","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parse","prev","parseDivisionValue","parsedValue","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","flags","undefined","opts","opt","val","labelVal","nodeValue","keySystem","psshNode","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","adaptationSets","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","manifestUri","periodNodes","periods","priorPeriod","representationInfo","stringToMpdXml","manifestString","xml","parser","DOMParser","parseFromString","documentElement","getElementsByTagName","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","ID3","getId3Offset","returnSize","getId3Size","normalizePath","path","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","subarray","desc","dependsOnEsId","ocrEsId","descriptors","len","decodeURIComponent","escape","bytesToString","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","paths","complete","p","normalizePaths","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","findH264Nal","findH265Nal","isLikelyTypes","isLikelyFn","browserApi","isLikely","detectContainerForBytes","version$6","hooks_","hooks","removeHook","FullscreenApi","prefixed","apiMap","specApi","document","history","log$1","createLogger$1","logByType","level","log","lvl","levels","lvlRegExp","window$1","LogByTypeFactory","createLogger","subname","all","debug","info","warn","fname","historyItem","clear","disable","enable","object","each","initial","accum","isPlain","constructor","merge$1","sources","defineLazyProperty","getValue","setter","set","defineProperty","enumerable","writable","configurable","get","ANDROID_VERSION","Obj","freeze","__proto__","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","isReal","UAD","platform","brands","find","brand","USER_AGENT","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","isEl","nodeType","isInFrame","createQuerier","selector","context","ctx","createEl","content","getOwnPropertyNames","propName","attrName","setAttribute","appendContent","innerText","prependTo","child","parent","firstChild","insertBefore","appendChild","hasClass","classToCheck","throwIfWhitespace","classList","contains","addClass","classesToAdd","add","removeClass","classesToRemove","remove","toggleClass","classToToggle","predicate","toggle","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","unblockTextSelection","getBoundingClientRect","parentNode","rect","computedStyle","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","translated","item","nodeName","transform","boxTarget","target","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","isTextNode","emptyEl","removeChild","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","prop","computedStyleValue","getPropertyValue","videojs$1","Dom","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","_supportsPassive","createStyleElement","style","setTextContent","styleSheet","cssText","DomData","WeakMap","_guid","newGUID","_cleanUpEvents","elem","has","handlers","removeEventListener","dispatcher","detachEvent","delete","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","body","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","passiveEvents","guid","hash","handlersCopy","m","n","addEventListener","supportsPassive","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","bind","throttle","last","debounce","immediate","timeout","cancel","clearTimeout","debounced","later","setTimeout","Fn","EventTarget$2","ael","allowedEvents_","Map","oldTimeout","dispatchEvent","objName","name_","isEvented","eventBusEl_","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","assign","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","replaceChild","tokens","defaultValue","code","languages","primaryCode","primaryLang","localizedString","ret","contentEl_","names","currentChild","getChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","contentEl","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","addChild","sync","isReady_","readyQueue","num","skipListeners","dimension","widthOrHeight","pxIndex","computedWidthOrHeight","rule","currentDimension","focus","blur","keycode","handleKeyDown","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","cancelAnimationFrame","idName","cancelName","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","getRange","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","createTimeRanges$1","registerComponent","defaultImplementation","seconds","guide","h","gm","gh","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","buildCSSClass","tabIndex","previouslyActiveEl_","localize","fillAlways","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","content_","activeEl","playerEl","focusIndex","focusableEls","focusableEls_","querySelector","shiftKey","allChildren","querySelectorAll","hasAttribute","TrackList","tracks","tracks_","addTrack","labelchange_","rtrack","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","AudioTrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","queueTrigger","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","trackProps","newLabel","parseUrl","host","getAbsoluteURL","getFileExtension","pathParts","pop","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","oncue","onparsingerror","onflush","flush","loadTrack","cors","withCredentials","tech_","XHR","err","response","responseBody","loaded_","TextTrack","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","HTMLTrackElement","readyState","NONE","LOADED","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","triggerSourceset","manualProgress","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","removeRemoteTextTrack","removeTrack","error_","trackListChanges","vtt","script","onload","onerror","addWebVttScript_","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createTrackHelper","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","Promise","reject","cb","requestNamedAnimationFrame","cancelNamedAnimationFrame","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","muted","played","seekable","volume","ended","allowedSetters","setCurrentTime","setMuted","setVolume","allowedMediators","mw","mws","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","getTech","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","update","update_","loading","alt","crossorigin","poster","setSrc","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","screenOrientation","changeOrientationEvent","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","selectedLanguage","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","updateDisplayState","LoadingSpinner","isAudio","playerType","dir","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","formattedTime_","oldNode","CurrentTimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","div","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","updateTime","MouseTimeDisplay","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","calculateDistance","userSeek_","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","disablePictureInPicture","requestPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","MouseVolumeLevelDisplay","updateVolume","bottom","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","handleKeyPress","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","open","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","legendId","selectLabelledbyIds","optionId","createElSelect_","innerHTML","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","selectedIndex","setSelectedOption","JSON","setValues","stringify","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","TitleBar","updateDom_","els","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","override","lowerCaseType","eventName","proxyNativeTracksForType_","overrideNative_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","defaultsStyleEl","head","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","playsinline","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","userActions","click","doubleClick","userWasActive","cancelable","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","initTime","inactivityTimeout","defaultPlaybackRate","reduceRight","resolve","play_","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","toggleFullscreenClass_","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","supportsFullScreen","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","hotkeys","isContentEditable","excludeElement","activeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","isRetry","resetRetryOnError_","middlewareSource","src_","handleSrc_","notSupportedMessage","setTech","retry","stopListeningForErrors","sourceTech","selectSource","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","playerChildren","controlBarHeight","currentHeight","exitPromises","enableAudioOnlyUI_","disableAudioOnlyUI_","enablePosterModeUI_","disablePosterModeUI_","modal","currentBreakpoint","currentWidth","candidateBreakpoint","breakpoints_","breakpoint_","currentBreakpointClass","responsive_","removeCurrentBreakpoint_","reset","artist","artwork","tt","titleBar","currentSources","previousLogLevel_","newRates","baseOptions","tagOptions","dataSetup","safeParseTuple","childName","navigator","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","getEventHash","Plugin","VERSION","isBasic","basicPluginWrapper","createBasicPlugin","deprecateForMajor","oldName","newName","warned","deprecate","registerPlugin","usingPlugin","hasPlugin","normalizeId","videojs","getPlayer","TypeError","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","getAllPlayers","comp","use","writeable","mergeOptions","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","EventTarget","xhr","dom","QualityLevel","bitrate","QualityLevelList","levels_","selectedIndex_","qualityLevel","getQualityLevelById","removed","addqualitylevel","removequalitylevel","version$5","qualityLevels","originalPluginFn","qualityLevelList","initPlugin$1","_resolveUrl","resolveManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","pi","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backward","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","forEachMediaGroup","setupMediaPlaylist","playlistErrors_","addPropertiesToMain","phonyUri","audioOnlyMain","groupId","setupMediaPlaylists","resolveMediaGroupUris","EventTarget$1","updateSegment","skipped","updateSegments","oldSegments","newSegments","newIndex","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","vhs_","vhsOptions","customTagParsers","customTagMappers","llhls","handleMediaupdatetimeout_","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","responseText","startingState","onwarn","oninfo","customParser","parseManifest","playlistObject","parseManifest_","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","onreadystatechange","abort","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","mainForMedia","videojsXHR","callbackWrapper","reqResponse","responseType","responseTime","roundTripTime","requestTime","headers","responseHeaders","timedout","aborted","statusCode","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","step","utils","tagDump","textRanges","getProgramTime","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","_len","buffers","_key","totalLen","buf","tempBuffer","concatTypedArrays","beforeSend","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","parseMainXml","mainXml","srcUrl","parsedManifestInfo","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","fin","requestErrored_","parseSidx","internal","playlistExclusionDuration","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","addSidxSegments_","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","hasPendingRequest","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","oldMain","newMain","noChanges","playlistUpdate","updateMain","location","mpl","mup","createMUPTimeout_","mediaGroupSidx","filterChangedSidxMappings","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","global","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","stream","MAX_UINT32$1","pow","numbers","getUint64","uint8","dv","DataView","getBigUint64","getUint32","MAX_UINT32","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils$1","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","generateSampleTableForFrame","concatenateNalDataForFrame","highPrefix","lowPrefix","zeroFill","ONE_SECOND_IN_TS$4","timestamp","sampleRate","timelineStartPts","keepOriginalTimestamps","clock$2","ONE_SECOND_IN_TS","coneOfSilence","metaTable","arr","clock$1","audioFrameUtils$1","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","sum","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo$1","clearDtsInfo","maxSegmentDts","maxSegmentPts","calculateTrackBaseMediaDecodeTime","timelineStartInfo","collectDtsInfo","captionPacketParser","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","emulationPreventionBytesPositions","USER_DATA_REGISTERED_ITU_T_T35","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","isEmpty","addText","backspace","row","substr","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","win","setCurrentWindow","TextDecoder","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","decode","newCode","get708CharFromCode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","reverse","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","TYPE_SHARED","handleRollover$1","direction","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","typedArray","fromIndex","currentIndex","Stream$5","StreamTypes$3","typedArrayIndexOf","textEncodingDescriptionByte","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","pictureType","pictureData","owner","privateData","tagSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","TimestampRolloverStream","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","fragment","trackId","pes","ptsDtsFlags","startPrefix","packetLength","parsePes","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","Stream$2","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","middle","parseType","parseSampleRate","parseAacTimestamp","percentEncode","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","bin","parseType_1","toUnsigned$2","parseType$2","findBox_1","findBox$2","subresults","toUnsigned$1","getUint64$1","parseTfdt$2","parseSampleFlags","parseTrun$2","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","parseType$1","parseTfhd","parseTrun","parseTfdt","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","StreamTypes","handleRollover","probe","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","console","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","trackIds","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","waitForCompletion","didError","segmentFinish","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","systemBandwidth","playlistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","removeGopBuffer","mapping","updatedBuffer","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","mediaDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","getMediaInfo_","videoBuffered","audioBuffered","storedMap","storedKey","playlist_","couldBeginLoading_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","buffered_","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","timestampOffsetForSegment","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","earlyAbortWhenNeeded_","checkForAbort_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","timeType","timingInfoProperty","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","getTrackById","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleCaptions_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","handleId3_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","initSegmentForMap","segmentKey","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","processMetadataQueue_","appendData_","changedTimestampOffset","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleQuotaExceededError_","segmentObj","concatSegments","appendBuffer","handleAppendError_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","getInitSegmentAndUpdateState_","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","handleAbort_","handleProgress_","handleTrackInfo_","handleTimingInfo_","handleSegmentTimingInfo_","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","handleTimeout_","saveBandwidthRelatedStats_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","endOfStream","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","bufferTypes","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","hasCreatedSourceBuffers","hasInitializedAnyEme","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","excludePlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","groups","variantLabel","isMainPlaylist","newProps","groupMatch","setupMediaGroups","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","lastTrack","pc","selectPlaylist","fastQualityChange_","setAudio","activeTrack_","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","bufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","cause","newId","abrTimer_","checkABR_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","playlistToExclude","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mainMediaInfo","getExpiredTime","absolutePlaylistEnd","reincluded","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","setDuration","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","areMediaTypesKnown_","createSourceBuffers","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","currentRange","livePoint","videoUnderflow_","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","overrideNativeAudioTracks","overrideNativeVideoTracks","featuresNativeVideoTracks","useBandwidthFromLocalStorage","useNetworkInformationApi","option","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","appendsToLoadedData_","timeToLoadedData","timeToLoadedData_","currentTech","playerDimensions","currentDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","audioPlaylistLoader","initializedEme","createKeySessions_","didSetupEmeOptions","excludedHDPlaylists","handleWaitingForKey_","qualityLevels_","addQualityLevel","handleVhsLoadedMetadata","VhsSourceHandler","supportedType","canUseMsePlayback","save","serializedState","localStorage","setItem","getItem","Caption","styled","VideoStyled","storage","Video","videoNode","useRef","setPlayer","useEffect","matchEl","lessonNumber","onClick","curTime","link","useSelector","selectIsLoading","Loader","Overlay","ModalStyled","Modal","onClose","handleKeydown","Item","LessonItem","lesson","showModal","setShowModal","toast","autoClose","colorScheme","order","previewImageLink","AboutCourseContainer","General","VideoContainer","CourseNameContainer","bcImageMob","bcImage","Title","LessonsList","courseId","useParams","useLocation","dispatch","useDispatch","courseDetails","setCourseDetails","lessonDetails","setLessonDetails","fetchCourseDetails","getToken","requestDataCourse","firstLesson","lessons","theme","notify","rating","getCoursesData","coursesData","courses","require","module","exports","decodeResponseBody","charset","contentTypeHeader","_contentType$split","getCharset","isFunction","createXHR","httpHandler","initParams","params","_createXHR","called","getBody","responseXML","firefoxBugTakenEffect","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","useXDR","rawRequest","getAllResponseHeaders","parseHeaders","XDomainRequest","XMLHttpRequest","onprogress","onabort","ontimeout","username","password","setRequestHeader","send","iterator","forEachArray","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","ac","conventions","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","domBuilder","defaultNSMap","xmlns","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","errorImpl","isCallback","Function","build","msg","buildErrorHandler","normalize","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","createElementNS","getURI","getQName","createAttributeNS","getLocator","setAttributeNode","endElement","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","createTextNode","skippedEntity","endDocument","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","createDocumentType","dt","doctype","warning","fatalError","notEmptyString","orderedSetReducer","toOrderedSet","splitOnASCIIWhitespace","copy","dest","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","Node","_xmlEncoder","_visitNode","Document","_onUpdateChild","cs","_removeChild","previous","previousSibling","lastChild","isDocTypeNode","isElementNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidity1to5","hasValidParentNodeType","hasInsertableNodeType","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","cp","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","prefixedNodeName","defaultNS","ai","nsi","pubid","sysid","sub","internalSubset","importNode","deep","node2","attrs2","_ownerElement","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","root","refChild","oldChild","appendData","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","getElementsByClassName","classNames","classNamesSet","nodeClassNames","nodeClassNamesSet","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","amp","apos","gt","lt","quot","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","exist","nabla","isin","notin","ni","prod","minus","lowast","radic","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","rho","sigmaf","sigma","tau","upsilon","phi","chi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","nameStartChar","nameChar","tagNamePattern","copyLocator","f","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","attributeNames","addValue","setTagName","closed","localNSMap","nsp","nsPrefix","_copy","parseHtmlSpecialContent","elStartEnd","elEndStart","fixSelfClosed","closeMap","pos","lastIndexOf","parseDCC","matchs","lastMatch","endDTD","parseInstruction","ElementAttributes","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","appendText","xt","lineEnd","linePattern","lineStart","parseStack","tagStart","endMatch","locator2","getLocalName","doccy","topLevel","minDoc","alert","confirm","prompt","searchInput","hasKeyCode","foundNamedKey","search","codes","aliases","isEventKey","nameOrCode","alias","referenceId","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","reviver","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","buildAbsoluteURL","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","region","vals","vals0","integer","lineAlign","snapToLines","center","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","annotation","rootDiv","tagStack","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","textAlign","font","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","StringDecoder","convertCueToDOMTree","cuetext","processCues","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","directionSetting","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","findDirectionSetting","SyntaxError","getCueAsHTML","scrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","__esModule"],"sourceRoot":""}